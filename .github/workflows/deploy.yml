name: Deploy to Production

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
      env:
        DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
    
    - name: Build application
      run: npm run build
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository_owner }}/productive-mining
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
      continue-on-error: true
    
    - name: Deployment summary
      run: |
        echo "‚úÖ Docker image built and pushed successfully"
        echo "üì¶ Image available at: ghcr.io/${{ github.repository_owner }}/productive-mining:latest"
        echo ""
        echo "Production deployment status:"
        if [ "${{ job.status }}" == "success" ]; then
          echo "‚úÖ Production deployment completed successfully"
        else
          echo "‚ö†Ô∏è Production deployment may have failed or was skipped"
          echo ""
          echo "To enable production deployment, configure these secrets in your repository:"
          echo "- PRODUCTION_HOST: Your production server hostname/IP"
          echo "- PRODUCTION_USER: SSH username for production server"
          echo "- PRODUCTION_SSH_KEY: SSH private key for production server"
          echo "- PRODUCTION_PORT: SSH port (optional, defaults to 22)"
        fi
    
    - name: Notify deployment status
      if: always()
      uses: 8398a7/action-slack@v3
      continue-on-error: true
      with:
        status: ${{ job.status }}
        channel: '#deployments'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}